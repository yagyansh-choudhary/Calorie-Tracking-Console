# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yhwK3AdhUhgVn7zTbWAYVD3thTGEaVoN
"""

# Name: Yagyansh Singh Ahlawat
# Date: 2025-10-24
# Title: Daily Calorie Tracker

from datetime import datetime

def main():
    print("Welcome to the Daily Calorie Tracker!")

    # Ask for number of meals
    try:
        num_meals = int(input("How many meals would you like to enter? "))
    except ValueError:
        print("Invalid input. Please enter an integer value.")
        return

    if num_meals <= 0:
        print("Number of meals must be positive.")
        return

    meal_names = []
    meal_calories = []

    # Collect meal names and calorie amounts
    for i in range(num_meals):
        name = input(f"Enter the name of meal {i+1}: ")
        meal_names.append(name)
        while True:
            try:
                calories = float(input(f"Enter the calorie amount for '{name}': "))
                if calories < 0:
                    print("Calories cannot be negative. Please enter a valid amount.")
                    continue
                break
            except ValueError:
                print("Invalid input. Please enter a numeric value for calories.")
        meal_calories.append(calories)

    # Calculate total and average calories
    total_calories = sum(meal_calories)
    average_calories = total_calories / num_meals

    # Display the table of meals and calories
    print("\nMeal Name           Calories")
    print("-" * 30)
    for name, cal in zip(meal_names, meal_calories):
        print(f"{name:<20}{cal}")
    print("-" * 30)
    print(f"{'Total':<20}{total_calories}")
    print(f"{'Average':<20}{average_calories:.2f}")

    # Check against daily calorie limit
    try:
        limit = float(input("\nEnter your daily calorie limit: "))
    except ValueError:
        print("Invalid input. Please enter a numeric value for calorie limit.")
        return

    if total_calories > limit:
        print("Warning: You have exceeded your daily calorie limit!")
    else:
        print("You are within your daily calorie limit.")

    # Bonus: Option to save session
    save = input("Would you like to save this session to a file? (yes/no) ").strip().lower()
    if save == 'yes':
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        filename = "calorie_log.txt"
        with open(filename, 'a') as file:
            file.write(f"Timestamp: {timestamp}\n")
            file.write("Meal Name           Calories\n")
            file.write("-" * 30 + "\n")
            for name, cal in zip(meal_names, meal_calories):
                file.write(f"{name:<20}{cal}\n")
            file.write("-" * 30 + "\n")
            file.write(f"{'Total':<20}{total_calories}\n")
            file.write(f"{'Average':<20}{average_calories:.2f}\n")
            file.write(f"Calorie Limit: {limit}\n")
            if total_calories > limit:
                file.write("Status: Exceeded limit\n")
            else:
                file.write("Status: Within limit\n")
            file.write("\n")  # blank line for separation
        print(f"Session saved to {filename}.")

if __name__ == "__main__":
    main()